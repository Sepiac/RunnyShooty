<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>playerSprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init angle and sprite stuff
image_angle = point_direction(x, y, Cursor.x, Cursor.y);
image_speed = 0;
image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player and Camera Movement

var playerSpeed = 5;

self.deltaX = 0;
self.deltaY = 0;

if(keyboard_check(ord('W')) &amp;&amp; keyboard_check(ord('A'))) {
    self.deltaY = -playerSpeed;
    self.deltaX = -playerSpeed;
} else if (keyboard_check(ord('A')) &amp;&amp; keyboard_check(ord('S'))) {
    self.deltaX = -playerSpeed;
    self.deltaY = playerSpeed;
} else if (keyboard_check(ord('S')) &amp;&amp; keyboard_check(ord('D'))) {
    self.deltaY = playerSpeed;
    self.deltaX = playerSpeed
} else if (keyboard_check(ord('D')) &amp;&amp; keyboard_check(ord('W'))) {
    self.deltaX = playerSpeed
    self.deltaY = -playerSpeed;
} else if (keyboard_check(ord('W'))) {
    self.deltaY = -playerSpeed;
} else if (keyboard_check(ord('A'))) {
    self.deltaX = -playerSpeed;
} else if (keyboard_check(ord('S'))) {
    self.deltaY = playerSpeed;
} else if (keyboard_check(ord('D'))) {
    self.deltaX = playerSpeed
}

var newX = x + self.deltaX;
var newY = y + self.deltaY;

var newMouseX = window_mouse_get_x() + self.deltaX;
var newMouseY = window_mouse_get_y() + self.deltaY;


x = newX;
y = newY;

Camera.x += self.deltaX;
Camera.y += self.deltaY;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Shooting

if (mouse_check_button_pressed(mb_left)) {
    var bulletSpawnDistance = 20;
    var bullet = instance_create(x + lengthdir_x(bulletSpawnDistance, image_angle), y + lengthdir_y(bulletSpawnDistance, image_angle), Bullet);
    with(bullet) {
        speed = 10;
        direction = point_direction(x, y, mouse_x, mouse_y);
        image_angle = point_direction(x, y, mouse_x, mouse_y);
        hspeed += other.deltaX;
        vspeed += other.deltaY;
    }
    
    //TODO: get this animation code consolidated
    image_index = 1;
    alarm[0] = room_speed * 0.1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update sprite direction
image_angle = point_direction(x, y, mouse_x, mouse_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
